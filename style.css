/* Селекторы */

* {
  /* Селектор применения стиля ко всем элементам страницы */
  box-sizing: border-box; /* значения width/height задают высоту/ширину всего элемента со значениями padding */
}

div {
  /* Селектор применения стиля ко всем указанным элементам*/
}

.class {
  /* Селектор применения стиля к определенному классу */
}

#id {
  /* Селектор применения стиля к уникальному элементу */
}

A:b {
  /* Псевдокласс применяет стиль ко всем элементам в A, подходящим под условия */
}

A B {
  /* Применение стиля к вложенному B в родителе A */
}

@font-face {
  /* Добавление шрифта локально или из сети */
  font-family: "Roboto Regular";
  src: local("Roboto");
  src: url("../font/Roboto-Regular.eot");
  src: url("../font/Roboto-Regular.eot?#iefix") format("embedded-opentype"),
    url("../font/Roboto-Regular.woff") format("woff"),
    url("../font/Roboto-Regular.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}

/* Стили */

body {
  background-color: blue; /* Определяет цвет фона элемента */
  background: linear-gradient(
    180deg,
    rgba(244, 213, 178, 0.8) 0%,
    rgba(234, 156, 65, 0.8) 100%
  ); /* Определеяет цвет фона градиентом */
  background: url(../img/01-Картинка-фона.jpg) center/cover no-repeat; /* Задает картинку фона и ее настройки */
  background-repeat: repeat; /* Повтор картинки */
  background-position: center; /* Задает нахождение картинки в родителе */
  background-size: cover; /* Задает размер и покрытие родителя фоном */

  margin: 100px 50px 100px 10px; /* Задает величину отступа от края элемента top right bottom left */
  margin: 0 auto; /* Перемещает объект в центр родителя по ширине */
  border: solid, black, 8px; /* Задает стиль рамки */
  border-radius: 20px; /* Устанавливает радиус скругления уголков рамки */
  padding: 100px 50px 100px 10px; /* Устанавливает значение полей вокруг содержимого элемента top right bottom left */
  height: 500px; /* Задает высоту содержимого элемента */
  width: 1000px; /* Задает ширину содержимого элемента */
  max-height: 100px; /* width */ /* устанавливает максимальную высоту элемента. Оно предотвращает увеличение используемого значения свойства height до значения, указанного для max-height. */
  min-width: 100px; /* height */ /* устанавливает минимальную ширину элемента. Оно предотвращает уменьшение используемого значения свойства width ниже значения, указанного для min-width. */

  position: static; /* Значение по умолчанию */
  position: relative; /* Относительное позиционирование. Положение элемента устанавливается относительно его исходного места */
  position: absolute; /* Абсолютное позиционирование. Указывает, что элемент абсолютно позиционирован, при этом другие элементы отображаются на веб-странице словно абсолютно позиционированного элемента и нет. Если у родителя значение position задано как relative, то отсчёт координат ведётся от края родительского элемента */
  position: fixed; /* Фиксированное позиционирование. По своему действию это значение близко к absolute, но в отличие от него привязывается к указанной свойствами left, top, right и bottom точке на экране и не меняет своего положения при прокрутке веб-страницы */
  position: sticky; /* Это сочетание относительного и фиксированного позиционирования. Элемент рассматривается как позиционированный относительно, пока он не пересекает определённый порог, после чего рассматривается как фиксированный. */
  z-index: -3; /* Любые позиционированные элементы на веб-странице могут накладываться друг на друга в определенном порядке, имитируя тем самым третье измерение, перпендикулярное экрану */
  left: 50px; /* Для позиционированного элемента определяет расстояние от левого края родительского элемента */
  right: 50px;
  top: 50px;
  bottom: 50px;
  overflow: visible; /* hidden, clip, scroll, auto */ /* устанавливает желаемое поведение, когда содержимое не помещается в рамку элемента (выходит за её пределы) по горизонтали и/или вертикали. */

  text-decoration: none; /* underline, blink, wavy overline lime */ /* определяет внешний вид декоративных линий в тексте. */
  font-size: 36px; /* Задает размер текста */
  text-align: left; /* Задает местоположение объекта внутри родительского объекта */
  font-family: "Philosopher"; /* Задает шрифт, указанный через @font-face*/
  font-family: "Times New Roman", Times, serif; /* Задает шрифт, установленный на компьютер + его альтернативы*/
  color: #f14b40; /* Задает цвет текста */
  display: block; /* Многоцелевое свойство, которое определяет, как элемент должен быть показан в документе. block, inline, inline-block, inline-flex, flex... */
  justify-content: flex-start; /*  flex-start | flex-end | center | space-between | 
    space-around | space-evenly */ /* Определяет, как браузер распределяет пространство вокруг флекс-элементов вдоль главной оси контейнера */
  align-items: center; /* flex-start | flex-end | center | baseline | stretch */ /* Выравнивает флекс-элементы внутри контейнера в перпендикулярном направлении */
  align-self: flex-end; /* auto | flex-start | flex-end | center | baseline | stretch */ /* Выравнивает флекс-элементы текущей строки, переписывая значение align-items */
  order: 1; /* Определяет порядок вывода флексов внутри флекс-контейнера. Возможны отрицательные числа */
  flex-direction: column; /* row | row-reverse | column | column-reverse */ /* Задаёт направление основных осей в контейнере и тем самым определяет положение флексов в контейнере */
  flex-wrap: nowrap; /* wrap, wrap-reverse */ /* Задает возможность переноса флексбоксов */

  /*  */

  display: grid;
  place-items: center flex-end; /* Объединенноу align-items и justify-content */
  gap: 10px; /* Шаг между колонками/рядами */
  grid-template-columns: auto, auto, auto; /* Разбивка на 3 колонки автоматически */
  grid-template-columns: 150px, 100px, 60px; /* Разбивка на 3 колонки с заданными размерами каждой */
  grid-template-columns: repeat(
    10,
    150px
  ); /* Разбивка на 10 колонок по 150px */
  grid-template-columns: 2fr, 1fr, 50px; /* 1fr = часть от имеющейся площади */
  grid-template-columns: 2fr, 1fr, 50px; /* 1fr = часть от имеющейся площади */
  grid-template-columns: minmax(20px, 40%), 1fr, 50px; /* minmax() = Браузер сам регулирует ширину от 20px до 40% от общей площади */
  grid-template-rows: 30px 20px, 150px; /* Задает высоту строк */
  grid-auto-rows: 15px, 100px; /* Задает всем не заданным строкам высоту в 15px. Можно создать паттерн (15px-100px) */
  grid-auto-columns: 50px, 120px; /* Задает всем не заданным колонкам ширину в 50px. Можно создать паттерн (50px-120px) */
  grid-auto-flow: column; /* Не переносить колонки на след. строчку */
  grid-template-areas:  /* Задает имеена зонам  */
    "."
    "first"
    "yellow"
    "nav";

  .nav {
    grid-area: nav; /* Обозначение grid, к которому будут применяться свойства */
    /* Свойсва для nav */
  }
  /* Определенный элемент будет занимать место с 3 до 5 колонку и с 4 по 7 строку */
  grid-column: 3 / 5;
  grid-row: 4 / 7;
  /*  */
  grid-column: -1 / 1; /* Растягивание элемента на все колонки */
}
